plugins {
    id 'todo.kotlin-application-conventions'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'io.ktor.plugin' version '2.1.2'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.20'
}

application {
    mainModule = 'frontend'
    mainClass = 'frontend.Main'
}

javafx {
    version = '18.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media']
}

dependencies {
    implementation project(":shared")

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.6.4")

    testImplementation "org.mockito:mockito-core:3.+"

    // Ktor Http service
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"
    implementation("io.ktor:ktor-client-core:$ktor_version")
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation("io.ktor:ktor-client-auth:$ktor_version")
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation("org.xerial:sqlite-jdbc:3.39.3.0")
    implementation("io.ktor:ktor-server-core:$ktor_version")
    implementation("io.ktor:ktor-server-netty:$ktor_version")
}

jar { duplicatesStrategy = "exclude" }

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
    mergedModule {
        excludeProvides servicePattern: 'reactor.blockhound.*'
        excludeProvides servicePattern: 'kotlin.*'
        excludeRequires("kotlin.coroutines.cancellation")

    }
}

jlinkZip {
    group = 'distribution'
}
